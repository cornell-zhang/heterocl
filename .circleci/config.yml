# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2
jobs:
  build:
    working_directory: ~/heterocl
    docker:
      - image: circleci/python:3.7  # primary container for the build job
    resource_class: large
    steps:
      - checkout  # checkout source code to working directory
      - run:
          name: Install dependency
          command: |
            sudo apt-get update && sudo apt-get install -y build-essential cmake
      - restore_cache:
          key: llvm-14.0.0
      - run:
          name: Build LLVM
          command: | # /home/circleci/heterocl
            if test -d llvm-project; then echo "LLVM exists"; \
              else git clone https://github.com/llvm/llvm-project.git; fi
            cd llvm-project
            git checkout tags/llvmorg-14.0.0
            python3 -m pip install --upgrade pip
            python3 -m pip install -r mlir/python/requirements.txt
            mkdir -p build && cd build
            if test -d bin; \
              then echo "Build completed"; \
            else cmake -G "Unix Makefiles" ../llvm -DLLVM_ENABLE_PROJECTS=mlir \
                -DLLVM_BUILD_EXAMPLES=ON -DLLVM_TARGETS_TO_BUILD="X86" \
                -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON \
                -DLLVM_INSTALL_UTILS=ON -DMLIR_ENABLE_BINDINGS_PYTHON=ON \
                -DPython3_EXECUTABLE=`which python3` && \
              make -j4;
            fi;
            export PYTHONPATH=$(pwd)/tools/mlir/python_packages/mlir_core:${PYTHONPATH}
            cd ../..
      - save_cache:
          key: llvm-14.0.0
          paths:
            - llvm-project
      - run:
          name: Build HCL-MLIR
          command: |
            export BUILD_DIR=$(pwd)/llvm-project/build
            export PREFIX=$(pwd)/llvm-project/build
            eval `ssh-agent -s`
            ssh-add - <<< '${{ secrets.PRIVATE_SSH_KEY }}'
            git clone https://github.com/cornell-zhang/hcl-dialect-prototype.git
            cd hcl-dialect-prototype
            mkdir -p build && cd build
            cmake -G "Unix Makefiles" .. \
                -DMLIR_DIR=$PREFIX/lib/cmake/mlir \
                -DLLVM_EXTERNAL_LIT=$BUILD_DIR/bin/llvm-lit \
                -DPYTHON_BINDING=ON \
                -DPython3_EXECUTABLE=`which python3`
            make -j4
            export PYTHONPATH=$(pwd)/tools/hcl/python_packages/hcl_core:${PYTHONPATH}
      - run:
          name: Test
          command: |
            cd hcl-dialect-prototype/build
            cmake --build . --target check-hcl
