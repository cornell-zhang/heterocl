import hlib


_convert_map = {
    'nn.dense': hlib.op.nn.dense,
    'nn.relu': hlib.op.nn.relu,
    'nn.bias_add': hlib.op.nn.bias_add,
    #    'prelu'                   : 'hlib.nn.prelu',
    'tanh': hlib.op.math.tanh,
    'sigmoid': hlib.op.math.sigmoid,
    'nn.softmax': hlib.op.nn.softmax,
    'nn.leaky_relu': hlib.op.nn.leakyrelu,
    'exp': hlib.op.math.exp,
    'log': hlib.op.math.log,
    'sqrt': hlib.op.math.sqrt,
    'clip': hlib.op.math.clip,
    'cast': hlib.op.op.cast,
    'nn.conv2d': hlib.op.nn.conv2d,
    #'nn.conv2d_transpose': hlib.op.nn.conv2d_transpose,
    'nn.max_pool2d': hlib.op.nn.max_pool2d,
    'nn.avg_pool2d': hlib.op.nn.avg_pool2d,
    'nn.global_max_pool2d': hlib.op.nn.global_max_pool2d,
    'nn.global_avg_pool2d': hlib.op.nn.global_avg_pool2d,
    'nn.dropout': hlib.op.nn.dropout,
    'nn.pad': hlib.op.nn.relay_pad,
    'transpose': hlib.op.nn.transpose,
    'reshape': hlib.op.nn.reshape,
    'nn.batch_flatten': hlib.op.nn.flatten,
    'nn.batch_norm': hlib.op.nn.batch_norm,
    'nn.batch_matmul': hlib.op.nn.batch_matmul,
    'abs': hlib.op.op.abs,
    'negative': hlib.op.op.negative,
    'add': hlib.op.op.broadcast_add,
    'subtract': hlib.op.op.broadcast_sub,
    'multiply': hlib.op.op.broadcast_mul,
    'greater': hlib.op.op.broadcast_greater,
    'divide': hlib.op.op.broadcast_div,
    'maximum': hlib.op.op.broadcast_max,
    'concatenate': hlib.op.nn.concatenate,
    'squeeze': hlib.op.nn.squeeze,
    'split': hlib.op.nn.split,
    'full': hlib.op.math.full,
    'full_like': hlib.op.math.full_like,
    'zeros': hlib.op.math.zeros,
    'zeros_like': hlib.op.math.zeros_like,
    'ones': hlib.op.math.ones,
    'ones_like': hlib.op.math.ones_like,
}


_attrib = {
    'nn.conv2d': [
        'strides',
        'padding',
        'dilation',
        'groups',
        'channels',
        'kernel_size',
        'data_layout',
        'kernel_layout',
        'out_layout',
        'out_dtype'],
    'nn.conv2d_transpose': [
        'channels',
        'kernel_size',
        'strides',
        'padding',
        'output_padding',
        'dilation',
        'groups',
        'data_layout',
        'kernel_layout',
        'out_layout',
        'out_dtype'],
    'nn.max_pool2d': [
        'pool_size',
        'strides',
        'padding',
        'layout'],
    'nn.global_max_pool2d': [
        'layout'],
    'nn.global_avg_pool2d': [
        'layout'],
    'nn.dropout': ['rate'],
    'nn.pad': ['pad_value', 'pad_width'],
    'nn.avg_pool2d': [
        'pool_size',
        'strides',
        'padding',
        'layout'],
    'transpose': ['axes'],
    'reshape': [
        'newshape'],
    'squeeze': ['axis'],
    'cast': ['dtype'],
    'nn.dense': [
        'units',
        'out_dtype'],
    'nn.softmax': ['axis'],
    'nn.bias_add': ['axis'],
    'sigmoid': [],
    'tanh': [],
    'nn.relu': [],
    'nn.batch_flatten': [],
    'nn.batch_norm': ['axis', 'epsilon', 'center', 'scale'],
    'nn.batch_matmul': [],
    'nn.leaky_relu': ['alpha'],
    'abs': [],
    'negative': [],
    'greater': [],
    'add': [],
    'subtract': [],
    'multiply': [],
    'divide': [],
    'maximum': [],
    'clip': ['a_min', 'a_max'],
    'concatenate': ['axis'],
    'squeeze': ['axis'],
    'split': [
        'indices_or_sections',
        'axis'],
    'full': ['shape', 'dtype'],
    'full_like': [],
    'zeros': ['shape', 'dtype'],
    'zeros_like': [],
    'ones_like': [],
    'exp': [],
    'log': []
}
